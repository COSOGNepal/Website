import React, { useEffect } from "react";

export default function GoalsArrow({ scrollPercent }: { scrollPercent: number }) {
    useEffect(() => {
        const path = document.querySelector("path");
        if (!path) return;
        const pathLength = path.getTotalLength();

        path.style.strokeDasharray = `${pathLength}`;
        path.style.strokeDashoffset = `${pathLength}`;

        const drawingLength = pathLength * scrollPercent;
        path.style.strokeDashoffset = `${pathLength - drawingLength}`;

    }, [scrollPercent])

    return (
        <svg viewBox="0 0 1382 913" fill="none" className="absolute w-full xl:h-full h-[80%] max-[880px]:hidden">
            <path
                d="M1215.36 3.3119C1178.25 -0.258032 1112.64 1.65844 1033.26 7.20578C953.916 12.7506 860.909 21.9147 769.052 32.8084C677.194 43.7022 586.499 56.3241 511.778 68.7829C437.004 81.2503 378.363 93.5335 350.516 103.727C335.997 109.042 324.658 113.8 316.213 118.079C307.729 122.378 302.31 126.125 299.487 129.366C298.087 130.974 297.413 132.359 297.234 133.535C297.062 134.664 297.322 135.75 298.101 136.865C299.751 139.23 303.631 141.587 309.987 143.841C322.568 148.303 343.508 151.928 370.831 155.331C397.471 158.649 430.038 161.741 466.585 165.21L469.24 165.463C619.626 179.742 835.854 200.577 981.641 269.462C991.93 274.324 998.798 278.977 1002.31 283.528C1004.09 285.831 1005.08 288.194 1005.12 290.6C1005.17 293.018 1004.26 295.279 1002.61 297.36C999.383 301.442 993.143 305.075 984.599 308.413C975.993 311.776 964.813 314.926 951.443 317.912C897.992 329.852 808.75 339.346 706.585 349.001C684.103 351.126 660.992 353.259 637.493 355.427C554.153 363.118 465.934 371.26 383.602 381.087C278.029 393.69 182.275 409.05 118.966 429.745C93.1623 438.179 75.6683 445.466 65.5359 452.004C60.4554 455.282 57.4008 458.263 55.9997 460.952C54.6683 463.508 54.791 465.857 56.3016 468.263C57.8895 470.793 61.0489 473.425 65.9329 476.152C70.7854 478.861 77.1877 481.581 85.0725 484.358C100.841 489.911 122.353 495.627 148.847 501.922C171.925 507.406 198.752 513.322 228.789 519.946C336.609 543.725 485.795 576.626 651.471 631.394C661.36 634.664 668.995 638.065 674.485 641.629C679.956 645.18 683.462 649 684.795 653.171C686.153 657.422 685.157 661.714 682.336 665.925C679.539 670.1 674.889 674.303 668.685 678.56C656.266 687.083 637.208 696.102 612.939 705.689C588.646 715.285 559.039 725.486 525.461 736.354C486.664 748.912 442.558 762.364 395.184 776.813C278.913 812.276 142.959 853.741 17.5065 902.717M17.5065 902.717L20.131 909.374L3 906.819L13.7785 893.261L17.5065 902.717Z"
                stroke="#0B0A27"
                strokeWidth="1"
            />
        </svg>
    )
}
